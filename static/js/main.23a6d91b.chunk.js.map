{"version":3,"sources":["assets/404ilus.png","pages/Splash.js","components/Button/button.js","components/Button/index.js","pages/Surat.js","pages/NotFound.js","App.js","serviceWorker.js","index.js","components/Hero/index.js"],"names":["module","exports","__webpack_require__","p","Splash","react_default","a","createElement","className","Component","Button","styled","_templateObject","PaginateButton","button","_templateObject2","props","isSecondary","components_Button","Button_button","children","LazySuratDetail","React","lazy","e","then","bind","Surat","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","id","match","params","state","surat","currentPage","perAyat","isMentok","getData","_this2","fetch","concat","response","json","setState","catch","error","console","log","_this$state","page","i","Math","ceil","length","push","_this3","_this$state2","Redirect","to","indexOfLastSurat","indexOfFirstSurat","renderAyat","slice","map","key","detailSurat","react","fallback","pages_Splash","Hero","localStorage","getItem","renderHTML","style","padding","onClick","handleBack","src","class","handleNext","NotFound","IMG_404","require","alt","href","LazyHomePage","App","qurans","isDataLoaded","quran","Fragment","Switch","Route","exact","path","render","data","component","Boolean","window","location","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","div","HeroContent","_templateObject3","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_1___default"],"mappings":"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","file":"static/js/main.23a6d91b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404ilus.3df27bc8.png\";","import React, { Component } from 'react';\n\n\nclass Splash extends Component {\n  render() {\n    return (\n      <div className=\"splash-page\">\n        <h1>Loading...</h1>\n      </div>\n    )\n  }\n}\n\nexport default Splash;","import styled from \"styled-components\";\n\nconst Button = styled.a`\n  border-radius: 25px;\n  text-align: center;\n  /* height: 30px; */\n  padding: 14px 60px;\n  font-weight: bold;\n  font-size: 16px;\n  line-height: 15px;\n  /* letter-spacing: 1.54px; */\n  /* text-transform: uppercase; */\n  color: #fff !important;\n  background-color: #7ed3b2;\n  cursor: pointer;\n  text-decoration: none !important;\n  box-shadow: 10px 16px 40px 0 #b9e6d3;\n  transition: 0.2s all ease-in-out !important;\n\n  &:hover,\n  &:focus,\n  &:active {\n    box-shadow: 5px 12px 20px 0 #b9e6d3;\n  }\n`;\n\nconst PaginateButton = styled.button`\n  border: none;\n  outline: none !important;\n  border-radius: 25px;\n  text-align: center;\n  padding: 10px 24px;\n  font-weight: bold;\n  font-size: 14px;\n  cursor: pointer;\n  color: ${props => (props.isSecondary ? \"#777\" : \"#fff\")};\n  background-color: ${props => (props.isSecondary ? \"#f2f4fb\" : \"#7ed3b2\")};\n  transition: 0.1s all ease-out;\n\n  &:active,\n  &:focus {\n    box-shadow: 0 0 0 2px #fff, 0 0 0 4px ${props => props.isSecondary ? '#f2f4fb' : '#7ed3b2'};\n  }\n`;\n\nexport default Button;\nexport { PaginateButton };\n","import React from \"react\";\nimport Button, { PaginateButton } from \"./button\";\n\nexport default props => {\n  return <Button {...props}>{props.children}</Button>;\n};\nexport { PaginateButton };\n","import React, { Component, Suspense } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport renderHTML from \"react-render-html\";\n\n// Pages\nimport Splash from \"./Splash\";\n\n// Component\nimport Hero from \"../components/Hero\";\nimport { PaginateButton } from \"../components/Button\";\nconst LazySuratDetail = React.lazy(() => import(\"../components/Surat\"));\n\nclass Surat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.id = props.match.params.id;\n\n    this.state = {\n      surat: [],\n      currentPage: 1,\n      perAyat: 10,\n      isMentok: false\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    fetch(\n      `https://al-quran-8d642.firebaseio.com/surat/${this.id}.json?print=pretty`\n    )\n      .then(response => response.json())\n      .then(surat => {\n        this.setState({\n          surat: surat\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleBack(e) {\n    // Cek Jika sudah pada halaman awal\n    if (this.state.currentPage === 1) {\n      return;\n    }\n\n    return this.setState({\n      currentPage: this.state.currentPage - 1,\n      isMentok: false\n    });\n  }\n\n  handleNext(e) {\n    let { surat, perAyat, currentPage } = this.state;\n    let page = [];\n    for (let i = 1; i <= Math.ceil(surat.length / perAyat); i++) {\n      page.push(i);\n    }\n\n    // Cek Jika sudah mentok\n    let totalPage = page.length;\n    if (currentPage === totalPage) {\n      this.setState({\n        isMentok: true\n      });\n      return;\n    }\n\n    this.setState({\n      currentPage: this.state.currentPage + 1\n    });\n  }\n\n  render() {\n    const { surat, currentPage, perAyat } = this.state;\n\n    // Cek jika surat tidak ada, makan akan dilaihkan ke halaman not found\n    if (surat === null) {\n      return <Redirect to=\"/notfound\" />;\n    }\n\n    // Logic buat menampilkan ayat dengan total yang di tentukan\n    const indexOfLastSurat = currentPage * perAyat;\n    const indexOfFirstSurat = indexOfLastSurat - perAyat;\n    const currentAyat = surat.slice(indexOfFirstSurat, indexOfLastSurat);\n\n    // Render Ayat\n    const renderAyat = currentAyat.map((surat, i) => {\n      return <LazySuratDetail key={i} detailSurat={surat} />;\n    });\n\n    // Render Pagination\n    const renderPagination = () => {\n      return (\n        <div className=\"pagination-wrapper fixed-bottom\">\n          <div className=\"container\">\n            <div className=\"d-flex justify-content-around\">\n              <PaginateButton\n                isSecondary={currentPage === 1 ? true : false}\n                onClick={this.handleBack.bind(this)}\n              >\n                <h2>Sebelumnya</h2>\n              </PaginateButton>\n              <div>\n                <audio\n                  id=\"play_surat\"\n                  src={localStorage.getItem(\"audio_surat\")}\n                >\n                  Your browser does not support the audio element.\n                </audio>\n                <PaginateButton><i class=\"fas fa-play\"></i></PaginateButton>\n              </div>\n              <PaginateButton\n                isSecondary={this.state.isMentok}\n                onClick={this.handleNext.bind(this)}\n              >\n                <h2>Selanjutnya</h2>\n              </PaginateButton>\n            </div>\n          </div>\n        </div>\n      );\n    };\n\n    return (\n      <div className=\"detail-surat\">\n        <Suspense fallback={<Splash />}>\n          <Hero>\n            <h1 className=\"hero-title\">{localStorage.getItem(\"nama_surat\")}</h1>\n            <p className=\"container\">\n              {renderHTML(localStorage.getItem(\"arti_surat\"))}\n            </p>\n          </Hero>\n\n          <div style={{ padding: \"40px 0\" }}>\n            <div className=\"container\">{renderAyat}</div>\n            {surat.length < 10 ? null : renderPagination()}\n          </div>\n        </Suspense>\n      </div>\n    );\n  }\n}\n\nexport default Surat;\n","import React, { Component } from \"react\";\n\n// Component\nimport Button from \"../components/Button\";\n\nclass NotFound extends Component {\n  render() {\n    const IMG_404 = require(\"../assets/404ilus.png\");\n    return (\n      <div className=\"notfound-page\">\n        <div className=\"notfound-page-img\">\n          <img alt=\"Halaman tidak ditemukan\" src={IMG_404} />\n        </div>\n        <h1>404 Not Found</h1>\n        <Button href=\"/\">Kembali ke beranda</Button>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component, Suspense, lazy } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\n// Pages\nimport Surat from \"./pages/Surat\";\nimport Splash from \"./pages/Splash\";\nimport NotFound from \"./pages/NotFound\";\nconst LazyHomePage = lazy(() => import(\"./pages/Home\"));\nconst LazyFooter = lazy(() => import(\"./components/Footer\"));\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      qurans: [],\n      isDataLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://al-quran-8d642.firebaseio.com/data.json?print=pretty\")\n      .then(response => response.json())\n      .then(quran => this.setState({ qurans: quran, isDataLoaded: true }))\n      .catch(error => console.log(error));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Suspense fallback={<Splash />}>\n          {this.state.isDataLoaded && (\n            <React.Fragment>\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={props => <LazyHomePage data={this.state.qurans} />}\n                />\n                <Route path=\"/surat/:id\" component={Surat} />\n                <Route path=\"/notfound\" component={NotFound} />\n                <Route component={NotFound} />\n              </Switch>\n              {/* <LazyFooter /> */}\n            </React.Fragment>\n          )}\n        </Suspense>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Router\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Hero = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  min-height: 300px;\n  background-color: #f2f2f2;\n  background-size: 28px 28px;\n  background-image: radial-gradient(circle, #b9e6d3, #b9e6d3 1px, #7ed3b2 1px, #7ed3b2);\n  text-align: center;\n  position: relative;\n`;\n\nconst HeroContent = styled.div`\n  min-width: 40vw;\n  overflow: hidden;\n`;\n\nexport const HeroBackButton = styled.a`\n  position: absolute;\n  background-color: white;\n  width: 40px;\n  height: 40px;\n  border-radius: 30px;\n  left: 40vw;\n`;\n\nexport default props => {\n  return (\n    <Hero>\n      <HeroContent>\n        {props.children}\n      </HeroContent>\n    </Hero>\n  );\n};\n"],"sourceRoot":""}